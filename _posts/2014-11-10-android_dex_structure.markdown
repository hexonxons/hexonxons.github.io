---
layout: post
title:  "Читаем .dex файл."
date:   2014-11-10 02:00:00
categories: android dex
---

Основная информация по структуре .dex файла находится по адресу: [Android dex format][dex-format]. Статья является частичным переводом оттуда и разбором на примере простого проекта.

В кратце : Что такое .dex файл?
Приложения для платформы Android обычно пишутся на языке Java и компилируется так же Java-компилятором, после чего транслируются в байткод для dalvik. Результатом этой трансляции и является .dex файл.
По сути .dex файл является контейнером для хранения скомпилированного кода для выполнения в виртуальной машине dalvik.

Больше информации по устройству андроида можно найти тут: [Android Core Technologies][android-tech]

<br>

### Представление .dex файла.

| Секция     | Формат           | Описание                                                                                                                                                                                                                                                                                                                                                                 |
|:-----------|:-----------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| header     | header_item      | Хедер файла.                                                                                                                                                                                                                                                                                                                                                             |
| string_ids | string_id_item[] | Массив id'шников строк.<br>Сюда входят id всех строк, используемых .dex файлом(описания типов, константы, методы и т.д). <br>Массив должен быть отсортирован по UTF-16 значениям строк (независимо от локали) и не содержать повторяющихся элементов.                                                                                                                    |
| type_ids   | type_id_item[]   | Массив id'шников типов.<br>Сюда входят id всех типов(классы, массивы или примитивные типы), на которые ссылается этот файл, вне зависимости - определены они в нем или нет.<br>Массив должен быть отсортирован по индексам типов в `string_ids` и не содержать повторяющихся элементов.                                                                                  |
| proto_ids  | proto_id_item[]  | Массив id'шников прототипов.<br>Сюда входят id всех прототипов, на которые ссылается этот файл.<br>Массив должен быть отсортирован по возвращаемому типу (`type_id`) и после по аргументами (`type_id`) и не содержать повторяющихся элементов.                                                                                                                          |
| field_ids  | field_id_item[]  | Массив id'шников полей.<br>Сюда входят id всех полей, на которые ссылается этот файл, вне зависимости - определены они в нем или нет.<br>Массив должен быть отсортирован по типу определения (`type_id`), имени поля (`string_id`) и после по типу (`type_id`) и не содержать повторяющихся элементов.                                                                   |
| method_ids | method_id_item[] | Массив id'шников методов.<br>Сюда входят id всех методов, на которые ссылается этот файл, вне зависимости - определены они в нем или нет.<br>Массив должен быть отсортирован по типу определения (`type_id`), имени метода (`string_id`) и после по прототипу метода (`proto_id`) и не содержать повторяющихся элементов.                                                |
| class_defs | class_def_item[] | Массив определений классов.<br>Массив должен быть отсортирован так, чтобы суперклассы и имплементированные интерфейсы появились в нем раньше, чем описываемый класс и не содержать повторяющихся элементов.                                                                                                                                                              |
| data       | ubyte[]          | Секция данных.<br>Содержит все вспомогательны данные для описанных выше секций.<br>Различные секции имеют различный сдвиг, поэтому между ними могут находиться некоторое количество байтов для обеспечения правильного сдвига.                                                                                                                                           |
| link_data  | ubyte[]          | Секция данных статически слинкованных файлов.<br>Конкретной спецификации нет. Секция может быть пуста при отсутствии статически слинкованных файлов.                                                                                                                                                                                                                     |

<br>

Типы элементов:

| Тип                        | Константа                       | Значение | Размер элемента в байтах |
|:---------------------------|:--------------------------------|:---------|--------------------------|
| header_item                | TYPE_HEADER_ITEM                | 0x0000   | 0x70                     |
| string_id_item             | TYPE_STRING_ID_ITEM             | 0x0001   | 0x04                     |
| type_id_item               | TYPE_TYPE_ID_ITEM               | 0x0002   | 0x04                     |
| proto_id_item              | TYPE_PROTO_ID_ITEM              | 0x0003   | 0x0c                     |
| field_id_item              | TYPE_FIELD_ID_ITEM              | 0x0004   | 0x08                     |
| method_id_item             | TYPE_METHOD_ID_ITEM             | 0x0005   | 0x08                     |
| class_def_item             | TYPE_CLASS_DEF_ITEM             | 0x0006   | 0x20                     |
| map_list                   | TYPE_MAP_LIST                   | 0x1000   | 4 + (item.size * 12)     |
| type_list                  | TYPE_TYPE_LIST                  | 0x1001   | 4 + (item.size * 2)      |
| annotation_set_ref_list    | TYPE_ANNOTATION_SET_REF_LIST    | 0x1002   | 4 + (item.size * 4)      |
| annotation_set_item        | TYPE_ANNOTATION_SET_ITEM        | 0x1003   | 4 + (item.size * 4)      |
| class_data_item            | TYPE_CLASS_DATA_ITEM            | 0x2000   | нужно парсить значение   |
| code_item                  | TYPE_CODE_ITEM                  | 0x2001   | нужно парсить значение   |
| string_data_item           | TYPE_STRING_DATA_ITEM           | 0x2002   | нужно парсить значение   |
| debug_info_item            | TYPE_DEBUG_INFO_ITEM            | 0x2003   | нужно парсить значение   |
| annotation_item            | TYPE_ANNOTATION_ITEM            | 0x2004   | нужно парсить значение   |
| encoded_array_item         | TYPE_ENCODED_ARRAY_ITEM         | 0x2005   | нужно парсить значение   |
| annotations_directory_item | TYPE_ANNOTATIONS_DIRECTORY_ITEM | 0x2006   | нужно парсить значение   |

<br>

### Структура секций.

#### header:

| Название        | Тип         | Описание                                                                                                                                                                                                                                                                                                                                                                                                                                                          |
|:----------------|:------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| magic           | ubyte[8]    | Любой .dex файл начинается с магической последовательности `ubyte[8] DEX_FILE_MAGIC = { 0x64 0x65 0x78 0x0a 0x30 0x33 0x35 0x00 } = "dex\n035\0"`.<br>Эта информация нужна для распознавания .dex файла как такового. Символы `"\n"` или `0x0a` и `"\0"` или `0x00` нужны для обнаружения некоторых форм повреждений файла.Так же последовательность содержит 3 цифры - версию формата, соответственно эта последовательность может отличаться от представленной. |
| checksum        | uint        | Чексумма .dex файла формата [adler32][adler-32]. Чексумма считается от всего содержимого файла кроме magic и checksum. Используется для проверки целостности файла.                                                                                                                                                                                                                                                                                               |
| signature       | ubyte[20]   | [SHA-1][SHA-1] хеш от всего содержимого файла кроме magic, checksum и signature. Используется для уникальной идентификации файла.                                                                                                                                                                                                                                                                                                                                 |
| file_size       | uint        | Размер .dex файла в байтах, включая хедер.                                                                                                                                                                                                                                                                                                                                                                                                                        |
| header_size     | uint = 0x70 | Размер всего хедера в байтах. Это поле существует для возможности изменений хедера и сохранения обратной совместимости без изменения формата файла целиком.                                                                                                                                                                                                                                                                                                       |
| endian_tag      | uint        | Константа задающая порядок байтов файла. Стандартный порядок байтов .dex файла - little endian: `REVERSE_ENDIAN_CONSTANT = 0x78563412`, другое возможное значение big endian: `ENDIAN_CONSTANT = 0x12345678`, это зависит от реализации.                                                                                                                                                                                                                          |
| link_size       | uint        | Размер link-секции .dex файла или 0, если это не статически слинкованный файл.                                                                                                                                                                                                                                                                                                                                                                                    |
| link_off        | uint        | Сдвиг от начала файла до секции `link_data` или 0, если `link_size == 0`.                                                                                                                                                                                                                                                                                                                                                                                         |
| map_off         | uint        | Сдвиг от начала файла до секции `map_list` или 0, если секция отсутствует. The offset, if non-zero, should be to an offset into the data section, and the data should be in the format specified by "map_list" below.                                                                                                                                                                                                                                             |
| string_ids_size | uint        | Количество элементов в the string identifiers list.                                                                                                                                                                                                                                                                                                                                                                                                               |
| string_ids_off  | uint        | Сдвиг от начала файла до string identifiers list или 0, если `string_ids_size == 0` (возможный но странный случай).                                                                                                                                                                                                                                                                                                                                               |
| type_ids_size   | uint        | Количество элементов в type identifiers list.                                                                                                                                                                                                                                                                                                                                                                                                                     |
| type_ids_off    | uint        | Сдвиг от начала файла до type identifiers list или 0, если `type_ids_size == 0` (возможный но странный случай).                                                                                                                                                                                                                                                                                                                                                   |
| proto_ids_size  | uint        | Количество элементов в prototype identifiers list.                                                                                                                                                                                                                                                                                                                                                                                                                |
| proto_ids_off   | uint        | Сдвиг от начала файла до prototype identifiers list или 0, если `proto_ids_size == 0` (возможный но странный случай).                                                                                                                                                                                                                                                                                                                                             |
| field_ids_size  | uint        | Количество элементов в field identifiers list.                                                                                                                                                                                                                                                                                                                                                                                                                    |
| field_ids_off   | uint        | Сдвиг от начала файла до field identifiers list или 0, если `field_ids_off == 0`.                                                                                                                                                                                                                                                                                                                                                                                 |
| method_ids_size | uint        | Количество элементов в method identifiers list.                                                                                                                                                                                                                                                                                                                                                                                                                   |
| method_ids_off  | uint        | Сдвиг от начала файла до method identifiers list или 0, если `method_ids_size == 0`.                                                                                                                                                                                                                                                                                                                                                                              |
| class_defs_size | uint        | Количество элементов в class definitions list.                                                                                                                                                                                                                                                                                                                                                                                                                    |
| class_defs_off  | uint        | Сдвиг от начала файла до class definitions list или 0, если `class_defs_size == 0` (возможный но странный случай).                                                                                                                                                                                                                                                                                                                                                |
| data_size       | uint        | Размер секции данных в байтах.                                                                                                                                                                                                                                                                                                                                                                                                                                    |
| data_off        | uint        | Сдвиг от начала файла до секции данных.                                                                                                                                                                                                                                                                                                                                                                                                                           |

<br>

Рассмотрим на примере [скомпилированного файла][dex-attach]. Откроем его в любом hex-редакторе:

`64 65 78 0A 30 33 35 00 27 1E 4C 5C F0 85 81 7F 52 C3 5D 55`
`B4 99 13 04 0F E5 8A D6 37 09 B4 2F 70 07 00 00 70 00 00 00`
`78 56 34 12 00 00 00 00 00 00 00 00 A0 06 00 00 22 00 00 00`
`70 00 00 00 0F 00 00 00 F8 00 00 00 03 00 00 00 34 01 00 00`
`03 00 00 00 58 01 00 00 0B 00 00 00 70 01 00 00 06 00 00 00`
`C8 01 00 00 E8 04 00 00 88 02 00 00`

Что есть что: читаем по очереди.

| Название        | Значение                                                      | Описание                                                                                                                                                                                                                             |
|:----------------|:--------------------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| magic           | `64 65 78 0A 30 33 35 00`                                     | Магическая последовательность. ASCII значение: `dex\n035\0`                                                                                                                                                                          |
| checksum        | `27 1E 4C 5C`                                                 | Чексумма. Если вырезать из файла первые 12 байт(magic и checksum) и проверить его например [тут][fileformat-hash], то получим значение `Adler32: 5c4c1e27`. То есть сумма правильная.  TODO: Adler32 инвертирован, SHA-1 - нет. wtf? |
| signature       | `F0 85 81 7F 52 C3 5D 55 B4 99 13 04 0F E5 8A D6 37 09 B4 2F` | SHA-1 хеш. Проверим [там же][fileformat-hash]: `SHA-1: f085817f52c35d55b49913040fe58ad63709b42f`. Все ок.                                                                                                                            |
| file_size       | `70 07 00 00`                                                 | Размер файла. Переведем в dec: 1904 байта. Что тоже верно.                                                                                                                                                                           |
| header_size     | `70 00 00 00`                                                 | Размер хидера. 112 байт.                                                                                                                                                                                                             |
| endian_tag      | `78 56 34 12`                                                 | Указывает на little-endian порядок байт.                                                                                                                                                                                             |
| link_size       | `00 00 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| link_off        | `00 00 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| map_off         | `A0 06 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| string_ids_size | `22 00 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| string_ids_off  | `70 00 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| type_ids_size   | `0F 00 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| type_ids_off    | `F8 00 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| proto_ids_size  | `03 00 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| proto_ids_off   | `34 01 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| field_ids_size  | `03 00 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| field_ids_off   | `58 01 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| method_ids_size | `0B 00 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| method_ids_off  | `70 01 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| class_defs_size | `06 00 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| class_defs_off  | `C8 01 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| data_size       | `E8 04 00 00`                                                 | ---------------                                                                                                                                                                                                                      |
| data_off        | `88 02 00 00`                                                 | ---------------                                                                                                                                                                                                                      |

Пока пропустим указанные прочерком строки. 

#### string_ids:

##### string_id_item

| Название        | Тип    | Описание                                                                                         |
|:----------------|:-------|:-------------------------------------------------------------------------------------------------|
| string_data_off | uint   | Сдвиг от начала файла к данным строки в data-секции. Данные должны быть указанного ниже формата. |

<br>

##### string_data_item

| Название   | Тип     | Описание                                                                      |
|:-----------|:--------|:------------------------------------------------------------------------------|
| utf16_size | uleb128 | Размер строки кодовых символах UTF-16. В общем -- длина строки.               |
| data       | ubyte[] | Серия кодовых символов MUTF-8 (октеты, байты) заканчивающаяся нулевым байтом. |

<br>

На примере того же [файла][dex-attach]:

Из хедера уже получены значения количества строк: `string_ids_off = 22 00 00 00` и сдвига: `string_ids_off = 70 00 00 00`. И, как указанно выше - размер `string_id_item = 0x04` байта.  
Значит надо прочитать 136 байт со сдвига 0x70:

`B6 03 00 00 BE 03 00 00 D0 03 00 00 D7 03 00 00 DA 03 00 00`
`F2 03 00 00 07 04 00 00 2C 04 00 00 52 04 00 00 72 04 00 00`
`96 04 00 00 B8 04 00 00 D3 04 00 00 F7 04 00 00 17 05 00 00`
`3A 05 00 00 4E 05 00 00 61 05 00 00 69 05 00 00 6C 05 00 00`
`70 05 00 00 74 05 00 00 77 05 00 00 84 05 00 00 93 05 00 00`
`99 05 00 00 A3 05 00 00 B0 05 00 00 B8 05 00 00 BE 05 00 00`
`C8 05 00 00 DC 05 00 00 EC 05 00 00 F2 05 00 00`

* Читаем 4 байта: `B6 03 00 00` - `string_data_off`.
* Читаем данные со сдвигом `string_data_off`: `06 3C 69 6E 69 74 3E 00 10 42 75 69 6C 64 43 6F 6E 66 69 67 2E`
* Считываем `utf16_size` - `06`.
* Считываем 6 байт: `3C 69 6E 69 74 3E`. Текстовое значение - `<init>`.
* Считываем нулевой байт.

Оформим чтение в таблицу для удобства:

| Сдвиг         | Размер строки | Hex-содержимое строки                                                                                         | Текстовое содержимое строки                                |
|:--------------|:--------------|:--------------------------------------------------------------------------------------------------------------|------------------------------------------------------------|
| `B6 03 00 00` | `06`          | `3C 69 6E 69 74 3E`                                                                                           | &lt;init&gt;                                               |
| `BE 03 00 00` | `10`          | `42 75 69 6C 64 43 6F 6E 66 69 67 2E 6A 61 76 61`                                                             | BuildConfig.java                                           |
| `D0 03 00 00` | `05`          | `44 45 42 55 47`                                                                                              | DEBUG                                                      |
| `D7 03 00 00` | `01`          | `49`                                                                                                          | I                                                          |
| `DA 03 00 00` | `16`          | `4C 61 6E 64 72 6F 69 64 2F 61 70 70 2F 41 63 74 69 76 69 74 79 3B`                                           | Landroid/app/Activity;                                     |
| `F2 03 00 00` | `13`          | `4C 61 6E 64 72 6F 69 64 2F 6F 73 2F 42 75 6E 64 6C 65 3B`                                                    | Landroid/os/Bundle;                                        |
| `07 04 00 00` | `23`          | `4C 63 6F 6D 2F 68 65 78 6F 6E 78 6F 6E 73 2F 64 65 78 2F 69 6E 76 2F 42 75 69 6C 64 43 6F 6E 66 69 67 3B`    | Lcom/hexonxons/dex/inv/BuildConfig;                        |
| `2C 04 00 00` | `24`          | `4C 63 6F 6D 2F 68 65 78 6F 6E 78 6F 6E 73 2F 64 65 78 2F 69 6E 76 2F 4D 61 69 6E 41 63 74 69 76 69 74 79 3B` | Lcom/hexonxons/dex/inv/MainActivity;                       |
| `52 04 00 00` | `1E`          | `4C 63 6F 6D 2F 68 65 78 6F 6E 78 6F 6E 73 2F 64 65 78 2F 69 6E 76 2F 52 24 61 74 74 72 3B`                   | Lcom/hexonxons/dex/inv/R$attr;                             |
| `72 04 00 00` | `22`          | `4C 63 6F 6D 2F 68 65 78 6F 6E 78 6F 6E 73 2F 64 65 78 2F 69 6E 76 2F 52 24 64 72 61 77 61 62 6C 65 3B`       | Lcom/hexonxons/dex/inv/R$drawable;                         |
| `96 04 00 00` | `20`          | `4C 63 6F 6D 2F 68 65 78 6F 6E 78 6F 6E 73 2F 64 65 78 2F 69 6E 76 2F 52 24 6C 61 79 6F 75 74 3B`             | Lcom/hexonxons/dex/inv/R$layout;                           |
| `B8 04 00 00` | `19`          | `4C 63 6F 6D 2F 68 65 78 6F 6E 78 6F 6E 73 2F 64 65 78 2F 69 6E 76 2F 52 3B`                                  | Lcom/hexonxons/dex/inv/R;                                  |
| `D3 04 00 00` | `22`          | `4C 64 61 6C 76 69 6B 2F 61 6E 6E 6F 74 61 74 69 6F 6E 2F 45 6E 63 6C 6F 73 69 6E 67 43 6C 61 73 73 3B`       | Ldalvik/annotation/EnclosingClass;                         |
| `F7 04 00 00` | `1E`          | `4C 64 61 6C 76 69 6B 2F 61 6E 6E 6F 74 61 74 69 6F 6E 2F 49 6E 6E 65 72 43 6C 61 73 73 3B`                   | Ldalvik/annotation/InnerClass;                             |
| `17 05 00 00` | `21`          | `4C 64 61 6C 76 69 6B 2F 61 6E 6E 6F 74 61 74 69 6F 6E 2F 4D 65 6D 62 65 72 43 6C 61 73 73 65 73 3B`          | Ldalvik/annotation/MemberClasses;                          |
| `3A 05 00 00` | `12`          | `4C 6A 61 76 61 2F 6C 61 6E 67 2F 4F 62 6A 65 63 74 3B`                                                       | Ljava/lang/Object;                                         |
| `4E 05 00 00` | `11`          | `4D 61 69 6E 41 63 74 69 76 69 74 79 2E 6A 61 76 61`                                                          | MainActivity.java                                          |
| `61 05 00 00` | `06`          | `52 2E 6A 61 76 61`                                                                                           | R.java                                                     |
| `69 05 00 00` | `01`          | `56`                                                                                                          | V                                                          |
| `6C 05 00 00` | `02`          | `56 49`                                                                                                       | VI                                                         |
| `70 05 00 00` | `02`          | `56 4C`                                                                                                       | VL                                                         |
| `74 05 00 00` | `01`          | `5A`                                                                                                          | Z                                                          |
| `77 05 00 00` | `0B`          | `61 63 63 65 73 73 46 6C 61 67 73`                                                                            | accessFlags                                                |
| `84 05 00 00` | `0D`          | `61 63 74 69 76 69 74 79 5F 6D 61 69 6E`                                                                      | activity_main                                              |
| `93 05 00 00` | `04`          | `61 74 74 72`                                                                                                 | attr                                                       |
| `99 05 00 00` | `08`          | `64 72 61 77 61 62 6C 65`                                                                                     | drawable                                                   |
| `A3 05 00 00` | `0B`          | `69 63 5F 6C 61 75 6E 63 68 65 72`                                                                            | ic_launcher                                                |
| `B0 05 00 00` | `06`          | `6C 61 79 6F 75 74`                                                                                           | layout                                                     |
| `B8 05 00 00` | `04`          | `6E 61 6D 65`                                                                                                 | name                                                       |
| `BE 05 00 00` | `08`          | `6F 6E 43 72 65 61 74 65`                                                                                     | onCreate                                                   |
| `C8 05 00 00` | `12`          | `73 61 76 65 64 49 6E 73 74 61 6E 63 65 53 74 61 74 65`                                                       | savedInstanceState                                         |
| `DC 05 00 00` | `0E`          | `73 65 74 43 6F 6E 74 65 6E 74 56 69 65 77`                                                                   | setContentView                                             |
| `EC 05 00 00` | `04`          | `74 68 69 73`                                                                                                 | this                                                       |
| `F2 05 00 00` | `05`          | `76 61 6C 75 65`                                                                                              | value                                                      |

#### type_ids:

##### type_id_item

| Название       | Тип    | Описание                                                                |
|:---------------|:-------|:------------------------------------------------------------------------|
| descriptor_idx | uint   | Индекс строки, описывающей тип, в массиве `string_ids`(TypeDescriptor)  |

<br>

Описание типа(TypeDescriptor) -- это представление любого типа, включая примитивные(int, long), классы, массивы и void:

* `'V'` - void
* `FieldTypeDescriptor`:
    * `NonArrayFieldTypeDescriptor`:
        * `'Z'` - `boolean`
        * `'B'` - `byte`
        * `'S'` - `short`
        * `'C'` - `char`
        * `'I'` - `int`
        * `'J'` - `long`
        * `'F'` - `float`
        * `'D'` - `double`
        * `'L'полное/имя/класса';'` - класс `полное.имя.класса`
    * `('[' * 1...255) NonArrayFieldTypeDescriptor` - массив типа `NonArrayFieldTypeDescriptor`. Может описывать многомерные массивы, но не более 255 измерений.

<br>

На примере того же [файла][dex-attach]:

Значения из хедера: `type_ids_size = 0F 00 00 00`, `type_ids_off = F8 00 00 00`. Размер элемента: `type_id_item = 0x04`. Читаем 60 байт со сдвигом 0xF8:

`03 00 00 00 04 00 00 00 05 00 00 00 06 00 00 00 07 00 00 00`
`08 00 00 00 09 00 00 00 0A 00 00 00 0B 00 00 00 0C 00 00 00`
`0D 00 00 00 0E 00 00 00 0F 00 00 00 12 00 00 00 15 00 00 00`

Оформим в таблицу:

| Индекс        | Значение                               | Тип                                        | Использование
|:--------------|:---------------------------------------|:-------------------------------------------|:-----------------------------------------------------------------------------------------------------------------|
| `03 00 00 00` | `I`                                    | `int`.                                     | Используется в классе `R.java`, например `public static final int ic_launcher=0x7f020000;`                       |
| `04 00 00 00` | `Landroid/app/Activity;`               | Класс `android.app.Activity`               | Используется в файле `MainActivity.java` : `public class MainActivity extends Activity`                          |
| `05 00 00 00` | `Landroid/os/Bundle;`                  | Класс `android.os.Bundle`                  | Используется в файле `MainActivity.java` : `protected void onCreate(Bundle savedInstanceState)`                  |
| `06 00 00 00` | `Lcom/hexonxons/dex/inv/BuildConfig;`  | Класс `com.hexonxons.dex.inv.BuildConfig`  | Используется в файле `BuildConfig.java` : `public final class BuildConfig`                                       |
| `07 00 00 00` | `Lcom/hexonxons/dex/inv/MainActivity;` | Класс `com.hexonxons.dex.inv.MainActivity` | Используется в файле `MainActivity.java` : `public class MainActivity extends Activity`                          |
| `08 00 00 00` | `Lcom/hexonxons/dex/inv/R$attr;`       | Класс `com.hexonxons.dex.inv.R.attr`       | Используется в файле `R.java` : `public static final class attr`                                                 |
| `09 00 00 00` | `Lcom/hexonxons/dex/inv/R$drawable;`   | Класс `com.hexonxons.dex.inv.R.drawable`   | Используется в файле `R.java` : `public static final class drawable`                                             |
| `0A 00 00 00` | `Lcom/hexonxons/dex/inv/R$layout;`     | Класс `com.hexonxons.dex.inv.R.layout`     | Используется в файле `R.java` : `public static final class layout`                                               |
| `0B 00 00 00` | `Lcom/hexonxons/dex/inv/R;`            | Класс `com.hexonxons.dex.inv.R`            | Используется в файле `R.java` : `public final class R`                                                           |
| `0C 00 00 00` | `Ldalvik/annotation/EnclosingClass;`   | Класс `dalvik.annotation.EnclosingClass`   |                                                                                                                  |
| `0D 00 00 00` | `Ldalvik/annotation/InnerClass;`       | Класс `dalvik.annotation.InnerClass`       |                                                                                                                  |
| `0E 00 00 00` | `Ldalvik/annotation/MemberClasses;`    | Класс `dalvik.annotation.MemberClasses`    |                                                                                                                  |
| `0F 00 00 00` | `Ljava/lang/Object;`                   | Класс `java.lang.Object`                   | Неявно испльзуется например в классе `R.java` : `public final class R` == `public final class R extends Object`  |
| `12 00 00 00` | `V`                                    | `void`                                     | Используется в файле `MainActivity.java` : `protected void onCreate(Bundle savedInstanceState)`                  |
| `15 00 00 00` | `Z`                                    | `boolean`                                  | Используется в файле `BuildConfig.java` : `public final static boolean DEBUG = true;`                            |

<br>

Классы `dalvik.annotation.EnclosingClass`, `dalvik.annotation.InnerClass` и `dalvik.annotation.MemberClasses` являются системными классами, использующимися для механизма Java Reflection.
Подробнее они описаны [здесь][system-annotation].

#### proto_ids:

##### proto_id_item

| Название        | Тип    | Описание                                                                                                                           |
|:----------------|:-------|:-----------------------------------------------------------------------------------------------------------------------------------|
| shorty_idx      | uint   | Индекс строки, описывающей прототип, в массиве `string_ids`(ShortyDescriptor)                                                      |
| return_type_idx | uint   | Индекс возвращаемого типа в массиве `type_ids`                                                                                     |
| parameters_off  | uint   | Сдвиг от начала файла к массиву параметров прототипа или 0, если у прототипа нет параметров. Формат массива описан ниже(type_list) |


Формат type_list:

| Название | Тип             | Описание                       |
|:---------|:----------------|:-------------------------------|
| size     | uint            | Количество элементов в массиве |
| list     | type_item[size] | Элементы                       |

Формат type_item:

| Название | Тип    | Описание                    |
|:---------|:-------|:----------------------------|
| type_idx | ushort | Индекс в массиве `type_ids` |

<br>

Описание прототипа(ShortyDescriptor) -- это краткое представление прототипа метода, которое включает в себя тип возвращаемого значения и типы параметров метода.  


* `'V'` - void
* `FieldTypeDescriptor`:
    * `NonArrayFieldTypeDescriptor`:
        * `'Z'` - `boolean`
        * `'B'` - `byte`
        * `'S'` - `short`
        * `'C'` - `char`
        * `'I'` - `int`
        * `'J'` - `long`
        * `'F'` - `float`
        * `'D'` - `double`
        * `'L'полное/имя/класса';'` - класс `полное.имя.класса`
    * `('[' * 1...255) NonArrayFieldTypeDescriptor` - массив типа `NonArrayFieldTypeDescriptor`. Может описывать многомерные массивы, но не более 255 измерений.






[comment]: <> Links section.

[dex-format]:           https://source.android.com/devices/tech/dalvik/dex-format.html
[adler-32]:             https://ru.wikipedia.org/wiki/Adler-32
[SHA-1]:                http://ru.wikipedia.org/wiki/SHA-1
[dex-attach]:           /data/binary/classes.dex
[fileformat-hash]:      http://www.fileformat.info/tool/hash.htm
[system-annotation]:    https://source.android.com/devices/tech/dalvik/dex-format.html#system-annotation
[android-tech]:         https://source.android.com/devices/tech/index.html
